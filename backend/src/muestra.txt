// src/utils/calculatePreferences.ts

import { questions } from '../components/Data/questionsKuder';

const categories = {
  ciencias: 0,
  artes: 0,
  tecnología: 0,
  humanidades: 0,
  negocios: 0,
  deportes: 0,
  salud: 0,
  servicios: 0,
  educación: 0,
};

const questionCategoryMap = {
  0: 'ciencias',
  1: 'tecnología',
  2: 'artes',
  3: 'humanidades',
  4: 'negocios',
  5: 'deportes',
  6: 'salud',
  7: 'servicios',
  8: 'educación',
  // Continúa asignando categorías para todas las preguntas hasta llegar a 60
  9: 'ciencias',
  10: 'tecnología',
  11: 'artes',
  12: 'humanidades',
  13: 'negocios',
  14: 'deportes',
  15: 'salud',
  16: 'servicios',
  17: 'educación',
  18: 'ciencias',
  19: 'tecnología',
  20: 'artes',
  21: 'humanidades',
  22: 'negocios',
  23: 'deportes',
  24: 'salud',
  25: 'servicios',
  26: 'educación',
  27: 'ciencias',
  28: 'tecnología',
  29: 'artes',
  30: 'humanidades',
  31: 'negocios',
  32: 'deportes',
  33: 'salud',
  34: 'servicios',
  35: 'educación',
  36: 'ciencias',
  37: 'tecnología',
  38: 'artes',
  39: 'humanidades',
  40: 'negocios',
  41: 'deportes',
  42: 'salud',
  43: 'servicios',
  44: 'educación',
  45: 'ciencias',
  46: 'tecnología',
  47: 'artes',
  48: 'humanidades',
  49: 'negocios',
  50: 'deportes',
  51: 'salud',
  52: 'servicios',
  53: 'educación',
  54: 'ciencias',
  55: 'tecnología',
  56: 'artes',
  57: 'humanidades',
  58: 'negocios',
  59: 'deportes',
};

export function calculatePreferences(responses: number[]) {
  responses.forEach((response, index) => {
    const category = questionCategoryMap[index];
    if (category) {
      if (response === 4) {
        categories[category] += 4; // Totalmente de acuerdo
      } else if (response === 3) {
        categories[category] += 3; // De acuerdo
      } else if (response === 2) {
        categories[category] += 2; // Neutral
      } else if (response === 1) {
        categories[category] += 1; // En desacuerdo
      } // No se suma si es totalmente en desacuerdo (0)
    }
  });

  const sortedCategories = Object.entries(categories).sort((a, b) => b[1] - a[1]);
  return sortedCategories.map(([category, score]) => ({ category, score }));
}
